---
- name: "Check for CRD_NAME var"
  fail:
    msg: |
      The CRD_NAME var is not defined. 
      Try running again like this: ansible-playbook create-crd.yaml -e CRD_NAME=...
  when: CRD_NAME is not defined
- name: "Check for CRD vars file: {{ CRD_VARS_PATH }}"
  ansible.builtin.stat:
    path: "{{ CRD_VARS_PATH }}"
  register: CRD_VARS_STAT
- name: Read the watches.yaml
  slurp:
    path: "{{ WATCHES_PATH }}"
  register: WATCHES_SLURP
  when: not CRD_VARS_STAT.stat.exists
- name: Set the watches.yaml data to a fact
  set_fact:
    WATCHES_DATA: "{{ WATCHES_SLURP['content'] | b64decode | from_yaml }}"
  when: not CRD_VARS_STAT.stat.exists
- name: Find index of kind in watches.yaml data
  ansible.builtin.set_fact:
    WATCHES_INDEX: "{{ lookup('ansible.utils.index_of', WATCHES_DATA, 'eq', CRD_NAME, 'kind') }}"
  when: not CRD_VARS_STAT.stat.exists
- name: Update the fact
  ansible.utils.update_fact:
    updates:
    - path: "WATCHES_DATA[{{ WATCHES_INDEX }}].snakeCaseParameters"
      value: false
    - path: "WATCHES_DATA[{{ WATCHES_INDEX }}].watchDependentResources"
      value: false
    - path: "WATCHES_DATA[{{ WATCHES_INDEX }}].finalizer"
      value:
        name: "{{ OPERATOR_DOMAIN_NAME }}/{{ CRD_NAME | lower }}-finalizer"
        role: delete-{{ CRD_NAME | lower }}
  register: WATCHES_DATA_UPDATED
  when: not CRD_VARS_STAT.stat.exists
- name: Write back to a file
  copy:
    content: "{{ lookup('template', 'watches.yaml') | replace('\\{\\{', '{{') | replace('\\}\\}', '}}') }}"
    dest: "{{ WATCHES_PATH }}"
  when: not CRD_VARS_STAT.stat.exists
- name: Set WATCH_DATA variable
  ansible.builtin.set_fact:
    WATCH_DATA: "{{ WATCHES_DATA_UPDATED.WATCHES_DATA[ WATCHES_INDEX | int ] }}"
  when: not CRD_VARS_STAT.stat.exists

- name: "Check for role defaults file: {{ ROLE_DEFAULTS_PATH }}"
  ansible.builtin.stat:
    path: "{{ ROLE_DEFAULTS_PATH }}"
  register: ROLE_DEFAULTS_STAT
- name: "Create directory if it does not exist {{ ROLE_DEFAULTS_PATH | dirname }}"
  ansible.builtin.file:
    path: "{{ ROLE_DEFAULTS_PATH | dirname }}"
    state: directory
  when: not ROLE_DEFAULTS_STAT.stat.exists
- name: "Write role defaults: {{ ROLE_DEFAULTS_PATH }}"
  copy:
    content: "{{ lookup('template', 'role-defaults.yaml') | replace('\\{\\{', '{{') | replace('\\}\\}', '}}') }}"
    dest: "{{ ROLE_DEFAULTS_PATH }}"
  when: not ROLE_DEFAULTS_STAT.stat.exists
- name: "Write main role tasks: {{ MAIN_ROLE_TASKS_PATH }}"
  copy:
    content: "{{ lookup('template', 'main-role-tasks.yaml') | replace('\\{\\{', '{{') | replace('\\}\\}', '}}') }}"
    dest: "{{ MAIN_ROLE_TASKS_PATH }}"

- name: "Check for role tasks file: {{ ROLE_TASKS_PATH }}"
  ansible.builtin.stat:
    path: "{{ ROLE_TASKS_PATH }}"
  register: ROLE_TASKS_STAT
- name: "Create directory if it does not exist {{ ROLE_TASKS_PATH | dirname }}"
  ansible.builtin.file:
    path: "{{ ROLE_TASKS_PATH | dirname }}"
    state: directory
  when: not ROLE_TASKS_STAT.stat.exists
- name: "Write role tasks: {{ ROLE_TASKS_PATH }}"
  copy:
    content: "{{ lookup('template', 'role-tasks.yaml') | replace('\\{\\{', '{{') | replace('\\}\\}', '}}') }}"
    dest: "{{ ROLE_TASKS_PATH }}"
  when: not ROLE_TASKS_STAT.stat.exists

- name: "Check for delete defaults file: {{ DELETE_DEFAULTS_PATH }}"
  ansible.builtin.stat:
    path: "{{ DELETE_DEFAULTS_PATH }}"
  register: DELETE_DEFAULTS_STAT
- name: "Create directory if it does not exist {{ DELETE_DEFAULTS_PATH | dirname }}"
  ansible.builtin.file:
    path: "{{ DELETE_DEFAULTS_PATH | dirname }}"
    state: directory
  when: not DELETE_DEFAULTS_STAT.stat.exists
- name: "Write delete defaults: {{ DELETE_DEFAULTS_PATH }}"
  copy:
    content: "{{ lookup('template', 'delete-defaults.yaml') | replace('\\{\\{', '{{') | replace('\\}\\}', '}}') }}"
    dest: "{{ DELETE_DEFAULTS_PATH }}"
  when: not DELETE_DEFAULTS_STAT.stat.exists

- name: "Check for delete tasks file: {{ DELETE_TASKS_PATH }}"
  ansible.builtin.stat:
    path: "{{ DELETE_TASKS_PATH }}"
  register: DELETE_TASKS_STAT
- name: "Create directory if it does not exist {{ DELETE_TASKS_PATH | dirname }}"
  ansible.builtin.file:
    path: "{{ DELETE_TASKS_PATH | dirname }}"
    state: directory
  when: not DELETE_TASKS_STAT.stat.exists
- name: "Write delete tasks: {{ DELETE_TASKS_PATH }}"
  copy:
    content: "{{ lookup('template', 'delete-tasks.yaml') | replace('\\{\\{', '{{') | replace('\\}\\}', '}}') }}"
    dest: "{{ DELETE_TASKS_PATH }}"
  when: not DELETE_TASKS_STAT.stat.exists

- name: "Check for apply playbook file: {{ APPLY_PLAYBOOK_PATH }}"
  ansible.builtin.stat:
    path: "{{ APPLY_PLAYBOOK_PATH }}"
  register: APPLY_PLAYBOOK_STAT
- name: "Write apply playbook: {{ APPLY_PLAYBOOK_PATH }}"
  copy:
    content: "{{ lookup('template', 'apply-playbook.yaml') | replace('\\{\\{', '{{') | replace('\\}\\}', '}}') }}"
    dest: "{{ APPLY_PLAYBOOK_PATH }}"
  when: not APPLY_PLAYBOOK_STAT.stat.exists

- name: "Check for delete playbook file: {{ DELETE_PLAYBOOK_PATH }}"
  ansible.builtin.stat:
    path: "{{ DELETE_PLAYBOOK_PATH }}"
  register: DELETE_PLAYBOOK_STAT
- name: "Write delete playbook: {{ DELETE_PLAYBOOK_PATH }}"
  copy:
    content: "{{ lookup('template', 'delete-playbook.yaml') | replace('\\{\\{', '{{') | replace('\\}\\}', '}}') }}"
    dest: "{{ DELETE_PLAYBOOK_PATH }}"
  when: not DELETE_PLAYBOOK_STAT.stat.exists

- name: "Create CRD vars directory if it does not exist: {{ CRD_VARS_PATH | dirname }}"
  ansible.builtin.file:
    path: "{{ CRD_VARS_PATH | dirname }}"
    state: directory
- name: "Write CRD vars file: {{ CRD_VARS_PATH }}"
  ansible.builtin.copy:
    content: "{{ lookup('template', 'vars.yaml') | replace('\\{\\{', '{{') | replace('\\}\\}', '}}') }}"
    dest: "{{ CRD_VARS_PATH }}"
  when: not CRD_VARS_STAT.stat.exists

- name: "Check for CRD vars values file: {{ CRD_VARS_VALUES_PATH }}"
  ansible.builtin.stat:
    path: "{{ CRD_VARS_VALUES_PATH }}"
  register: CRD_VARS_VALUES_STAT
- name: "Create CRD vars values directory if it does not exist: {{ CRD_VARS_VALUES_PATH | dirname }}"
  ansible.builtin.file:
    path: "{{ CRD_VARS_VALUES_PATH | dirname }}"
    state: directory
  when: not CRD_VARS_VALUES_STAT.stat.exists
- name: "Write CRD vars values file: {{ CRD_VARS_VALUES_PATH }}"
  ansible.builtin.copy:
    content: "{{ lookup('template', 'vars-values.yaml') | replace('\\{\\{', '{{') | replace('\\}\\}', '}}') }}"
    dest: "{{ CRD_VARS_VALUES_PATH }}"
  when: not CRD_VARS_VALUES_STAT.stat.exists
